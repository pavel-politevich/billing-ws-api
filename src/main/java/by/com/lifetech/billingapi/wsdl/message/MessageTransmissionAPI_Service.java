package by.com.lifetech.billingapi.wsdl.message;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.xml.namespace.QName;
import java.net.URL;

/**
 * This class was generated by Apache CXF 4.1.0
 * 2025-03-05T17:49:13.011+03:00
 * Generated source version: 4.1.0
 *
 */
@WebServiceClient(name = "MessageTransmissionAPI",
                  wsdlLocation = "classpath:wsdl/message/message-service.wsdl",
                  targetNamespace = "http://api.ws.rtn.idr.astelit.ukr/")
public class MessageTransmissionAPI_Service extends Service {
    static Logger logger = LoggerFactory.getLogger(MessageTransmissionAPI_Service.class);

    public static final QName SERVICE = new QName("http://api.ws.rtn.idr.astelit.ukr/", "MessageTransmissionAPI");
    public static final QName MessageTransmissionAPIPort = new QName("http://api.ws.rtn.idr.astelit.ukr/", "MessageTransmissionAPIPort");

    public MessageTransmissionAPI_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MessageTransmissionAPI_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MessageTransmissionAPI_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public MessageTransmissionAPI_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns MessageTransmissionAPI
     */
    @WebEndpoint(name = "MessageTransmissionAPIPort")
    public MessageTransmissionAPI getMessageTransmissionAPIPort() {
        return super.getPort(MessageTransmissionAPIPort, MessageTransmissionAPI.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MessageTransmissionAPI
     */
    @WebEndpoint(name = "MessageTransmissionAPIPort")
    public MessageTransmissionAPI getMessageTransmissionAPIPort(WebServiceFeature... features) {
        return super.getPort(MessageTransmissionAPIPort, MessageTransmissionAPI.class, features);
    }
}
